version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: forsa-postgres
    environment:
      POSTGRES_USER: forsa_user
      POSTGRES_PASSWORD: forsa_password
      POSTGRES_DB: forsa_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forsa_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: forsa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forsa-api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forsa-celery-worker
    command: celery -A app.core.celery_app worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forsa-celery-beat
    command: celery -A app.core.celery_app beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forsa-flower
    command: celery -A app.core.celery_app flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - celery-worker

volumes:
  postgres_data:
  redis_data:
